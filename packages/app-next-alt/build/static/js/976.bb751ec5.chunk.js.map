{"version":3,"file":"static/js/976.bb751ec5.chunk.js","mappings":"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","sources":["components/Dialog.tsx","utilities/hermiteResize.ts","utilities/blob.ts","components/Input.tsx","components/Spinner.tsx","components/Tag.tsx","components/TagList.tsx","utilities/noop.ts","utilities/toSlug.ts"],"sourcesContent":["import React from 'react'\nimport { A11yDialog } from 'react-a11y-dialog'\nimport A11yDialogInstance from 'a11y-dialog'\nimport { X } from 'react-feather'\nimport { createGlobalStyle } from 'styled-components'\nimport { theme } from 'theme'\nimport { HeadingBaseStyles } from './Typography'\n\nexport type Events = {\n  show: () => void\n  hide: () => void\n}\n\nexport type DialogProps = React.PropsWithChildren<{\n  id: string\n  title: string\n  reference: (instance: A11yDialogInstance) => void\n}>\n\nconst DialogStyles = createGlobalStyle`\n  .dialog-container,\n  .dialog-overlay {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .dialog-container {\n    z-index: 2;\n    display: flex;\n\n    &[aria-hidden='true'] {\n      display: none;\n    }\n  }\n\n  .dialog-overlay {\n    background-color: rgba(10, 62, 43, 0.8);\n  }\n\n  .dialog-content {\n    margin: auto;\n    margin-left: ${({ theme }) => theme.spacings.m};\n    margin-right: ${({ theme }) => theme.spacings.m};\n    z-index: 2;\n    position: relative;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.beige};\n    border-radius: ${({ theme }) => theme.baseRadius};\n    padding: ${({ theme }) => theme.spacings.m};\n    display: grid;\n    grid-template-columns: 1fr min-content;\n    grid-template-areas:\n      \"title close\"\n      \"content content\";\n\n    > div {\n      grid-area: content;\n      overflow: scroll;\n      max-height: 70vh;\n      padding-bottom: ${({ theme }) => theme.spacings.m};\n    }\n  }\n\n  .dialog-close-button {\n    grid-area: close;\n    background-color: ${({ theme }) => theme.colors.blue};\n    box-shadow: 0px 2px 9px ${({ theme }) => theme.colors.blue};\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: ${({ theme }) => theme.spacings.l};\n  }\n\n  .dialog-title {\n    grid-area: title;\n    margin-bottom: ${({ theme }) => theme.spacings.l};\n    ${HeadingBaseStyles}\n    font-weight: 500;\n  }\n`\n\nexport default function Dialog(props: DialogProps) {\n  return (\n    <React.Fragment>\n      {/** The following props are required because we reuse the Heading styles */}\n      <DialogStyles as=\"h6\" size=\"m\" color=\"greenDark\" />\n      <A11yDialog\n        id={props.id}\n        dialogRef={props.reference}\n        title={props.title}\n        classNames={{\n          container: 'dialog-container',\n          overlay: 'dialog-overlay',\n          dialog: 'dialog-content',\n          title: 'dialog-title',\n          closeButton: 'dialog-close-button',\n        }}\n        closeButtonContent={<X color={theme.colors.white} />}\n      >\n        <div>{props.children}</div>\n      </A11yDialog>\n    </React.Fragment>\n  )\n}\n","/**\n * Resize algorithm using the Hermite interpolation.\n * Found on StackOverflow and adjusted to my needs:\n * @see https://stackoverflow.com/a/19223362/1724106\n */\n\nimport config from 'config'\nimport logger from './logger'\n\nexport default function hermiteResize(\n  canvas: HTMLCanvasElement,\n  W: number,\n  H: number,\n  W2 = W / 2,\n  H2 = H / 2\n): HTMLCanvasElement {\n  const time1 = Date.now()\n  const img = canvas.getContext('2d')!.getImageData(0, 0, W, H)\n  const img2 = canvas.getContext('2d')!.getImageData(0, 0, W2, H2)\n  const data = img.data\n  const data2 = img2.data\n  const ratioWidth = W / W2\n  const ratioHeight = H / H2\n  const ratioWidthHalf = Math.ceil(ratioWidth / 2)\n  const ratioHeightHalf = Math.ceil(ratioHeight / 2)\n\n  for (let j = 0; j < H2; j++) {\n    for (let i = 0; i < W2; i++) {\n      const x2 = (i + j * W2) * 4\n      let weight = 0\n      let weights = 0\n      let weightsAlpha = 0\n      let gxR = 0\n      let gxG = 0\n      let gxB = 0\n      let gxA = 0\n      const centerY = (j + 0.5) * ratioHeight\n      for (let yy = Math.floor(j * ratioHeight); yy < (j + 1) * ratioHeight; yy++) {\n        const dy = Math.abs(centerY - (yy + 0.5)) / ratioHeightHalf\n        const centerX = (i + 0.5) * ratioWidth\n        const w0 = dy * dy // pre-calc part of w\n        for (let xx = Math.floor(i * ratioWidth); xx < (i + 1) * ratioWidth; xx++) {\n          let dx = Math.abs(centerX - (xx + 0.5)) / ratioWidthHalf\n          const w = Math.sqrt(w0 + dx * dx)\n          if (w >= -1 && w <= 1) {\n            // hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1\n            if (weight > 0) {\n              dx = 4 * (xx + yy * W)\n              // alpha\n              gxA += weight * data[dx + 3]\n              weightsAlpha += weight\n              // colors\n              if (data[dx + 3] < 255) weight = (weight * data[dx + 3]) / 250\n              gxR += weight * data[dx]\n              gxG += weight * data[dx + 1]\n              gxB += weight * data[dx + 2]\n              weights += weight\n            }\n          }\n        }\n      }\n      data2[x2] = gxR / weights\n      data2[x2 + 1] = gxG / weights\n      data2[x2 + 2] = gxB / weights\n      data2[x2 + 3] = gxA / weightsAlpha\n    }\n  }\n\n  if (!config.isProductionMode) {\n    logger('hermite = ' + Math.round(Date.now() - time1) / 1000 + ' s')\n  }\n\n  canvas.width = W2\n  canvas.height = H2\n  canvas.getContext('2d')!.putImageData(img2, 0, 0)\n\n  return canvas\n}\n","import * as blobUtil from 'blob-util'\nimport hermiteResize from './hermiteResize'\n\nexport const isBase64 = (string?: string): boolean => {\n  try {\n    return btoa(atob(String(string))) === string\n  } catch {\n    return false\n  }\n}\n\nexport const hasReaderSupport = typeof FileReader !== 'undefined' || typeof URL !== 'undefined'\n\nexport const isBlobbable = (blob: unknown): boolean => blob instanceof Blob || blob instanceof File\n\nexport function getUrlFromBlob(blob?: Blob | File): string {\n  return isBlobbable(blob) ? blobUtil.createObjectURL(blob!) : ''\n}\n\ninterface ResizeBlobOptions {\n  width?: number\n}\n\nexport function resizeBlob(file: File, options: ResizeBlobOptions = {}): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    if (!isBlobbable(file) && !hasReaderSupport) {\n      reject(new Error('File is not a blob'))\n    }\n\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    const img = new Image()\n\n    img.src = blobUtil.createObjectURL(file)\n    img.onload = () => {\n      const width = img.width\n      const height = img.height\n      const resizedWidth = options.width ? Math.ceil(options.width) : width / 2\n      const resizedHeight = Math.ceil((height * resizedWidth) / width)\n\n      canvas.width = width\n      canvas.height = height\n\n      ctx?.drawImage(img, 0, 0)\n\n      blobUtil\n        .canvasToBlob(hermiteResize(canvas, width, height, resizedWidth, resizedHeight))\n        .then((cBlob: Blob) => {\n          blobUtil.revokeObjectURL(img.src)\n          resolve(cBlob)\n        })\n        .catch((error: Error) => {\n          blobUtil.revokeObjectURL(img.src)\n          reject(error)\n        })\n    }\n  })\n}\n","import React, {\n  InputHTMLAttributes,\n  TextareaHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport { AlertCircle, Eye, EyeOff, Image } from 'react-feather'\nimport { theme } from 'theme'\nimport { Text } from 'components/Typography'\nimport { WithMarginProps, WithMarginStyles } from 'utilities/withProps'\nimport noop from 'utilities/noop'\nimport { getUrlFromBlob, isBlobbable, resizeBlob } from 'utilities/blob'\nimport logger from 'utilities/logger'\nimport VisuallyHidden from './VisuallyHidden'\nimport { Button } from './Button'\nimport { toast } from './Toaster'\nimport Spinner from './Spinner'\n\ninterface BaseInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  error?: string\n  fullWidth?: boolean\n  onFileInput?(data: { file?: File; fileName: string }): void\n  filePreview?: string\n  fileBackgroundColor?: 'beigeDark' | 'greenDark'\n}\n\ninterface BaseTextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  error?: string\n  fullWidth?: boolean\n  height?: string\n}\n\ntype InputProps = WithMarginProps<BaseInputProps>\ntype TextareaProps = WithMarginProps<BaseTextareaProps>\n\nconst InputContainer = styled.div<InputProps | TextareaProps>`\n  ${WithMarginStyles}\n  position: relative;\n  width: ${(props) => (props.fullWidth ? '100%' : 'auto')};\n\n  input[disabled] + div:first-of-type {\n    cursor: not-allowed;\n  }\n`\n\nconst BaseStyles = css<InputProps | TextareaProps>`\n  width: ${(props) => (props.fullWidth ? '100%' : 'auto')};\n  background: ${({ theme }) => theme.colors.white};\n  font-family: var(--font-special);\n  font-size: ${({ theme }) => theme.fonts.base};\n  padding: calc(${({ theme }) => theme.spacings.m} * 2);\n  border: 2px solid ${({ theme, error }) => (error ? theme.colors.red : theme.colors.white)};\n  color: var(--brand-green-dark);\n  transition: box-shadow var(--base-transition) ease-in-out;\n\n  ${({ error }) =>\n    error &&\n    css`\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    `}\n\n  &:focus,\n  &:active {\n    border-color: ${({ theme }) => theme.colors.beigeDark};\n    outline: none;\n    box-shadow: 0 2px 9px ${({ theme }) => theme.colors.beigeDark};\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.beigeDark};\n  }\n\n  &:invalid:not(:empty) {\n    border-color: ${({ theme }) => theme.colors.red};\n  }\n\n  &[disabled] {\n    color: ${({ theme }) => theme.colors.beigeDark};\n    cursor: not-allowed;\n  }\n`\n\nconst BaseInput = styled.input<InputProps>`\n  ${BaseStyles}\n\n  &[type='radio'],\n  &[type='checkbox'] {\n    width: 22px;\n    height: 22px;\n    border: 2px solid ${({ theme }) => theme.colors.beigeDark};\n    border-radius: 100%;\n    appearance: none;\n    padding: 0;\n\n    &:checked {\n      border-color: ${({ theme }) => theme.colors.green};\n      background: ${({ theme }) => theme.colors.green};\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      &::before {\n        content: '';\n        display: block;\n        width: 60%;\n        height: 30%;\n        border-radius: ${({ theme }) => theme.baseRadius};\n        border-bottom: 2px solid ${({ theme }) => theme.colors.white};\n        border-left: 2px solid ${({ theme }) => theme.colors.white};\n        transform: rotate(-45deg) translateX(1px);\n      }\n    }\n\n    &:focus,\n    &:active {\n      box-shadow: 0 2px 9px ${({ theme }) => theme.colors.green};\n    }\n  }\n\n  &[type='file'] {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n  }\n`\n\nconst BaseTextarea = styled.textarea<TextareaProps>`\n  ${BaseStyles}\n  height: ${({ height }) => height || 'auto'};\n`\n\nconst ErrorContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.red};\n  padding: ${({ theme }) => theme.spacings.s};\n  display: flex;\n  align-items: center;\n  border-bottom-left-radius: ${({ theme }) => theme.baseRadius};\n  border-bottom-right-radius: ${({ theme }) => theme.baseRadius};\n\n  :empty {\n    padding: 0;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.spacings.s};\n    height: 20px;\n    width: 20px;\n  }\n`\n\nconst TogglePasswordButton = styled(Button)`\n  position: absolute;\n  z-index: 1;\n  top: calc(1.5 * ${(props) => props.theme.spacings.m});\n  right: calc(1.5 * ${(props) => props.theme.spacings.m});\n  background: transparent;\n  border: none;\n  box-shadow: none;\n  color: ${(props) => props.theme.colors.beigeDark};\n  display: flex;\n\n  &:focus,\n  &:active {\n    color: ${(props) => props.theme.colors.greenDark};\n    outline: none;\n  }\n`\n\nconst FileUploadImage = styled.div<{ $color: 'beigeDark' | 'greenDark' }>`\n  background: ${({ theme, $color }) => theme.colors[$color]};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.white};\n  height: var(--size);\n\n  & img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst FileUploadContainer = styled.div`\n  --size: 55px; // Calculated height of an input element\n  display: grid;\n  grid-template-columns: var(--size) 1fr;\n  background: ${({ theme }) => theme.colors.white};\n  border-radius: ${({ theme }) => theme.baseRadius};\n  overflow: hidden;\n  cursor: text;\n\n  & > div:not(${FileUploadImage}) {\n    padding: calc(${({ theme }) => theme.spacings.m} * 1.5);\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    & p {\n      display: block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n\n      > span {\n        color: ${({ theme }) => theme.colors.black};\n      }\n    }\n  }\n`\n\nexport function Input(props: InputProps) {\n  const {\n    error,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    type,\n    onChange = noop,\n    onFileInput = noop,\n    filePreview,\n    accept = 'image/png, image/jpg, image/jpeg',\n    fileBackgroundColor = 'beigeDark',\n    fullWidth,\n    ...remainingProps\n  } = props\n  const [showPlainPassword, setPlainPassword] = useState(false)\n  const [file, setFile] = useState<File>()\n  const [fileName, setFileName] = useState('')\n  const [imageUrl, setImageUrl] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const isFileInput = type === 'file'\n  const previewImage = filePreview && !isBlobbable(file) ? filePreview : imageUrl\n  const fileInput = useRef<HTMLInputElement>(null)\n\n  async function _onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    onChange(event)\n    if (!isFileInput || !event?.target?.files?.length) return\n\n    setIsLoading(true)\n\n    let _file = event.target.files[0]\n    if (!accept.includes(_file.type)) {\n      toast.error('File format not supported.')\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      const resized = await resizeBlob(_file, { width: window.outerWidth * 1.5 })\n      setFile(\n        new File([resized], _file.name, {\n          type: _file.type,\n          lastModified: Date.now(),\n        })\n      )\n    } catch (error) {\n      logger(error as string, true)\n      console.error(error)\n      setFile(file)\n    } finally {\n      setIsLoading(false)\n      setFileName(_file.name)\n    }\n  }\n\n  function _onClick(event: React.MouseEvent<HTMLDivElement>) {\n    if (!isFileInput) return\n    event.preventDefault()\n    triggerFileUpload()\n  }\n\n  function _onKeyPress(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (!isFileInput) return\n    event.preventDefault()\n    triggerFileUpload()\n  }\n\n  function triggerFileUpload() {\n    fileInput?.current?.click()\n  }\n\n  useEffect(() => {\n    if (!isFileInput) return\n    if (file) {\n      setImageUrl(getUrlFromBlob(file))\n      onFileInput({ file, fileName })\n    }\n  }, [isFileInput, file, fileName, onFileInput])\n\n  return (\n    <InputContainer\n      {...{ m, mt, mr, mb, ml }}\n      tabIndex={isFileInput ? 0 : undefined}\n      fullWidth\n      onKeyPress={_onKeyPress}\n    >\n      <BaseInput\n        ref={fileInput}\n        error={error}\n        tabIndex={isFileInput ? -1 : undefined}\n        accept={isFileInput ? accept : undefined}\n        hidden={isFileInput}\n        type={type === 'password' && showPlainPassword ? 'text' : type}\n        onChange={_onChange}\n        {...remainingProps}\n        aria-describedby={[props['aria-describedby'], props.id + '-error']\n          .filter(Boolean)\n          .join(' ')}\n        aria-invalid={Boolean(error)}\n        fullWidth\n      />\n\n      {/* If input is used as type=\"file\" we render a custom component. */}\n      {isFileInput && (\n        <FileUploadContainer onClick={_onClick}>\n          <FileUploadImage $color={fileBackgroundColor}>\n            {isLoading && <Spinner />}\n            {!isLoading && !file ? <Image /> : <img src={previewImage} loading=\"lazy\" alt=\"\" />}\n          </FileUploadImage>\n          <div>\n            <Text color=\"beigeDark\" variant=\"special\">\n              {isLoading ? 'Loading...' : fileName ? <span>{fileName}</span> : 'Select a photo'}\n            </Text>\n          </div>\n        </FileUploadContainer>\n      )}\n\n      {/* If the input is used as type=\"password\" we show a button to toggle the content. */}\n      {type === 'password' && (\n        <TogglePasswordButton\n          onClick={(event) => {\n            event.preventDefault()\n            setPlainPassword(!showPlainPassword)\n          }}\n          type=\"button\"\n          size=\"s\"\n        >\n          {showPlainPassword ? (\n            <EyeOff aria-hidden=\"true\" focusable=\"false\" />\n          ) : (\n            <Eye aria-hidden=\"true\" focusable=\"false\" />\n          )}\n          <VisuallyHidden>{showPlainPassword ? 'Hide password' : 'Show password'}</VisuallyHidden>\n        </TogglePasswordButton>\n      )}\n\n      <ErrorContainer id={props.id + '-error'}>\n        {error && (\n          <React.Fragment>\n            <AlertCircle color={theme.colors.white} />\n            <Text color=\"white\" size=\"s\">\n              {error}\n            </Text>\n          </React.Fragment>\n        )}\n      </ErrorContainer>\n    </InputContainer>\n  )\n}\n\nexport function Textarea(props: TextareaProps) {\n  const { error, m, mt, mr, mb, ml, ...remainingProps } = props\n\n  return (\n    <InputContainer {...{ m, mt, mr, mb, ml }}>\n      <BaseTextarea error={error} {...remainingProps} />\n      {error && (\n        <ErrorContainer>\n          <AlertCircle color={theme.colors.white} />\n          <Text color=\"white\" size=\"s\">\n            {error}\n          </Text>\n        </ErrorContainer>\n      )}\n    </InputContainer>\n  )\n}\n","import { Loader } from 'react-feather'\nimport styled from 'styled-components'\nimport { spin } from 'theme'\n\nconst Spinner = styled(Loader)`\n  animation: ${spin} 3s linear infinite;\n`\n\nexport default Spinner\n","import React, { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Text } from './Typography'\n\nconst Container = styled.button<{ $active: boolean }>`\n  background: ${({ $active, theme }) => ($active ? theme.colors.green : theme.colors.white)};\n  border: none;\n  border-radius: ${({ theme }) => theme.baseRadius};\n  padding: ${({ theme }) => theme.spacings.m};\n`\n\ntype TagProps = PropsWithChildren<\n  React.HTMLAttributes<HTMLButtonElement> & {\n    active?: boolean\n  }\n>\n\nexport default function Tag(props: TagProps) {\n  const { active = false, children, ...rest } = props\n  return (\n    <Container $active={active} {...rest}>\n      <Text color={active ? 'white' : 'greenDark'}>{children}</Text>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PlantTag } from 'typings/plant'\nimport noop from 'utilities/noop'\nimport Tag from './Tag'\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  li {\n    margin-right: ${({ theme }) => theme.spacings.m};\n    margin-bottom: ${({ theme }) => theme.spacings.m};\n  }\n`\n\ninterface TagListProps {\n  tags?: PlantTag[]\n  selected?: PlantTag[]\n  onSelect?: (tag: PlantTag) => void\n}\n\nexport default function TagList(props: TagListProps) {\n  const { tags = [], selected = [], onSelect = noop } = props\n\n  return (\n    <List>\n      {tags.map((tag) => (\n        <li key={tag.label + tag.id}>\n          <Tag active={selected.some((t) => t.id === tag.id)} onClick={() => onSelect(tag)}>\n            {tag.label}\n          </Tag>\n        </li>\n      ))}\n    </List>\n  )\n}\n","export default function noop() {}\n","export default function toSlug(str: string) {\n  return str\n    .normalize('NFKD')\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, '')\n    .trim()\n    .replace(/[-\\s]+/g, '-')\n}\n"],"names":["DialogStyles","createGlobalStyle","theme","spacings","m","colors","beige","baseRadius","blue","l","HeadingBaseStyles","Dialog","props","as","size","color","id","dialogRef","reference","title","classNames","container","overlay","dialog","closeButton","closeButtonContent","children","hermiteResize","canvas","W","H","W2","H2","time1","Date","now","img","getContext","getImageData","img2","data","data2","ratioWidth","ratioHeight","ratioWidthHalf","Math","ceil","ratioHeightHalf","j","i","x2","weight","weights","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","floor","dy","abs","centerX","w0","xx","dx","w","sqrt","config","logger","round","width","height","putImageData","hasReaderSupport","FileReader","URL","isBlobbable","blob","Blob","File","resizeBlob","file","options","Promise","resolve","reject","Error","document","createElement","ctx","Image","src","blobUtil","onload","resizedWidth","resizedHeight","drawImage","then","cBlob","catch","error","InputContainer","styled","WithMarginStyles","fullWidth","BaseStyles","css","white","fonts","base","red","beigeDark","BaseInput","green","BaseTextarea","ErrorContainer","s","TogglePasswordButton","Button","greenDark","FileUploadImage","$color","FileUploadContainer","black","Input","mt","mr","mb","ml","type","onChange","noop","onFileInput","filePreview","accept","fileBackgroundColor","remainingProps","useState","showPlainPassword","setPlainPassword","setFile","fileName","setFileName","imageUrl","setImageUrl","isLoading","setIsLoading","isFileInput","previewImage","fileInput","useRef","event","target","files","length","_file","includes","toast","window","outerWidth","resized","name","lastModified","console","triggerFileUpload","current","click","useEffect","tabIndex","undefined","onKeyPress","preventDefault","ref","hidden","filter","Boolean","join","onClick","Spinner","loading","alt","variant","focusable","VisuallyHidden","Textarea","Loader","spin","Container","$active","Tag","active","rest","List","TagList","tags","selected","onSelect","map","tag","some","t","label","toSlug","str","normalize","toLowerCase","replace","trim"],"sourceRoot":""}
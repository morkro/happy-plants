{"version":3,"file":"static/js/plant.595af777.chunk.js","mappings":"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","sources":["components/TagsDialog.tsx","components/TypesList.tsx","services/dayjs.ts","components/Time.tsx","pages/Plant.tsx","utilities/toLocaleDate.ts","pages/PlantGallery.tsx","pages/PlantNew.tsx","components/NewIllustration.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport styled from 'styled-components'\nimport A11yDialogInstance from 'a11y-dialog'\nimport { theme } from 'theme'\nimport { PlantTag } from 'typings/plant'\nimport noop from 'utilities/noop'\nimport useUserProfile from 'utilities/useUserProfile'\nimport toSlug from 'utilities/toSlug'\nimport logger from 'utilities/logger'\nimport { addPlantTag } from 'services/firebase'\nimport VisuallyHidden from './VisuallyHidden'\nimport { Button } from './Button'\nimport Dialog from './Dialog'\nimport { Input } from './Input'\nimport TagList from './TagList'\nimport { Text } from './Typography'\nimport Spinner from './Spinner'\nimport { toast } from './Toaster'\n\nconst Actions = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacings.m};\n  align-items: center;\n  margin-top: ${({ theme }) => theme.spacings.l};\n`\n\ninterface TagsDialogProps {\n  id: string\n  tags?: PlantTag[]\n  loading: boolean\n  onSelect: (tags: PlantTag[]) => void\n  selected: PlantTag[]\n  reference: React.Dispatch<React.SetStateAction<A11yDialogInstance | undefined>>\n}\n\nexport default function TagsDialog(props: TagsDialogProps) {\n  const { id, tags = [], loading, onSelect = noop, selected = [], reference } = props\n  const profile = useUserProfile()\n  const [selectedTags, setSelectedTags] = useState<PlantTag[]>(selected)\n  const [inputTagName, setInputTagName] = useState({ value: '', error: '' })\n  const [isUploading, setIsUploading] = useState(false)\n\n  function toggleTagSelection(tag: PlantTag) {\n    if (selectedTags.some((t) => t.id === tag.id)) {\n      setSelectedTags(selectedTags.filter((t) => t.id !== tag.id))\n    } else {\n      setSelectedTags((t) => [...t, tag])\n    }\n  }\n\n  async function addNewTag() {\n    if (inputTagName.value.trim() === '') {\n      setInputTagName((d) => ({ ...d, error: `Tag name can't be empty.` }))\n      return\n    }\n\n    setIsUploading(true)\n    try {\n      const name = inputTagName.value.trim()\n      const partialData = { label: name, value: toSlug(name) }\n      await addPlantTag(profile.id, partialData)\n      toast.success('Tag successfully created.')\n    } catch (error) {\n      logger(error as string, true)\n      toast.error('An error occured creating your tag, please try again')\n    } finally {\n      setIsUploading(false)\n      setInputTagName({ value: '', error: '' })\n    }\n  }\n\n  useEffect(() => {\n    setSelectedTags(selected)\n  }, [selected])\n\n  useEffect(() => {\n    onSelect(selectedTags)\n  }, [selectedTags, onSelect])\n\n  return (\n    <Dialog id={id} title=\"Manage tags\" reference={reference}>\n      {loading ? (\n        <Spinner />\n      ) : tags.length ? (\n        <TagList tags={tags} selected={selectedTags} onSelect={toggleTagSelection} />\n      ) : (\n        <Text color=\"greenDark\">{`You haven't created any tags yet.`}</Text>\n      )}\n      <Actions>\n        <Input\n          fullWidth\n          type=\"text\"\n          placeholder=\"Create new tag\"\n          id=\"tags-create\"\n          value={inputTagName.value}\n          error={inputTagName.error}\n          disabled={isUploading}\n          onChange={(event) => setInputTagName({ value: event.target.value, error: '' })}\n        />\n        <Button round onClick={addNewTag}>\n          <VisuallyHidden>Create new tag</VisuallyHidden>\n          {isUploading ? <Spinner /> : <Plus color={theme.colors.white} />}\n        </Button>\n      </Actions>\n    </Dialog>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport typesData from 'data/types'\nimport { PlantType } from 'typings/plant'\nimport noop from 'utilities/noop'\nimport { Input } from './Input'\nimport { Text } from './Typography'\n\nconst List = styled.ul`\n  li:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacings.m};\n  }\n\n  label {\n    display: grid;\n    grid-template-columns: min-content 1fr;\n    grid-gap: ${({ theme }) => theme.spacings.m};\n  }\n`\n\nexport interface TypesListProps {\n  selected?: PlantType\n  onSelectType?: (type?: PlantType) => void\n}\n\nexport default function TypesList({ selected, onSelectType = noop }: TypesListProps) {\n  const [selectedType, setSelectedType] = useState<PlantType | undefined>(selected)\n  const isSelected = useCallback(\n    (type: PlantType) => (selectedType ? selectedType.id === type.id : false),\n    [selectedType]\n  )\n\n  useEffect(() => {\n    if (selected?.id !== selectedType?.id) {\n      setSelectedType(selectedType)\n      onSelectType(selectedType)\n    }\n  }, [selected, selectedType, onSelectType])\n\n  return (\n    <List>\n      <li>\n        <label htmlFor=\"type-empty\">\n          <Input\n            type=\"radio\"\n            id=\"type-empty\"\n            name=\"type\"\n            value=\"empty\"\n            checked={selectedType === undefined}\n            onClick={() => setSelectedType(undefined)}\n          />\n          <Text color={selectedType === undefined ? 'greenDark' : 'beigeDark'}>Leave empty</Text>\n        </label>\n      </li>\n      {typesData.map((type) => (\n        <li key={type.id}>\n          <label htmlFor={`type-${type.value}`}>\n            <Input\n              type=\"radio\"\n              id={`type-${type.value}`}\n              name=\"type\"\n              value={type.value}\n              checked={isSelected(type)}\n              onClick={() => setSelectedType(type)}\n            />\n            <Text color={isSelected(type) ? 'greenDark' : 'beigeDark'}>{type.label}</Text>\n          </label>\n        </li>\n      ))}\n    </List>\n  )\n}\n","import dayjs from 'dayjs'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isToday from 'dayjs/plugin/isToday'\n\ndayjs.extend(isSameOrBefore)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isToday)\n\nexport type Dayjs = dayjs.Dayjs\n\nexport interface CalendarDay {\n  day: string\n  weekday: string\n  isToday: boolean\n  isCurrentMonth: boolean\n  hasWaterings: boolean\n  dayjs: Dayjs\n}\n\nexport type CalendarWeek = CalendarDay[]\nexport type CalendarMonth = CalendarWeek[]\n\ninterface GetDayOptions {\n  beginningOfMonth?: Dayjs\n  endOfMonth?: Dayjs\n  hasWaterings: boolean\n}\n\nexport const getDate = (): Dayjs => dayjs()\n\nexport const getDay = (\n  referenceDay: Dayjs,\n  { beginningOfMonth, endOfMonth, hasWaterings }: GetDayOptions\n): CalendarDay => {\n  return {\n    day: referenceDay.format('D'),\n    weekday: referenceDay.format('ddd'),\n    isCurrentMonth: Boolean(\n      beginningOfMonth &&\n        endOfMonth &&\n        referenceDay.isSameOrAfter(beginningOfMonth) &&\n        referenceDay.isSameOrBefore(endOfMonth)\n    ),\n    isToday: referenceDay.isToday(),\n    hasWaterings,\n    dayjs: referenceDay,\n  }\n}\n\nexport const getCurrentMonth = (\n  referenceDate: dayjs.Dayjs = getDate(),\n  startOfWeek = 1\n): CalendarMonth => {\n  const beginningOfMonth = referenceDate.startOf('month')\n  const endOfMonth = referenceDate.endOf('month')\n  const beginningOfWeek = beginningOfMonth.set('day', startOfWeek)\n  const month: CalendarMonth = []\n  const weeks = 6\n  const days = 7\n  let lastDay = 0\n\n  for (let week = 0; week < weeks; week++) {\n    month.push([])\n\n    for (let day = 0; day < days; day++) {\n      const setDay = beginningOfWeek.add(lastDay, 'day')\n      month[week].push(\n        getDay(setDay, { beginningOfMonth, endOfMonth, hasWaterings: Math.random() >= 0.5 })\n      )\n      lastDay++\n    }\n  }\n\n  return month\n}\n\nexport const toReadableTime = (time: dayjs.ConfigType): string => dayjs(time).format('HH:mm:ss')\n","import React from 'react'\nimport { toReadableTime } from 'services/dayjs'\n\ninterface LocalisedDateProps {\n  dateTime: string | number | Date\n  children: string | number | Date\n}\n\nfunction LocalisedDate(props: LocalisedDateProps) {\n  return (\n    <time dateTime={new Date(props.dateTime).toISOString()}>{toReadableTime(props.children)}</time>\n  )\n}\n\nexport default React.memo(LocalisedDate)\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router'\nimport A11yDialogInstance from 'a11y-dialog'\nimport styled, { createGlobalStyle, css } from 'styled-components'\nimport { CameraOff, MoreVertical, Plus, Trash2 } from 'react-feather'\nimport { theme } from 'theme'\nimport { useDownloadURL } from 'react-firebase-hooks/storage'\nimport { routePaths } from 'routes'\nimport { Heading, Text } from 'components/Typography'\nimport {\n  deletePhoto,\n  deletePlant,\n  getFileRef,\n  getTagDocs,\n  getTagRef,\n  updatePlant,\n  updatePlantType,\n  usePlantDocument,\n  usePlantTags,\n} from 'services/firebase'\nimport { toast } from 'components/Toaster'\nimport DocumentTitle from 'components/DocumentTitle'\nimport Spinner from 'components/Spinner'\nimport BaseSVG from 'components/BaseSVG'\nimport Dialog from 'components/Dialog'\nimport TypesList from 'components/TypesList'\nimport { AppHeaderPortal, AppHeaderButton } from 'components/AppHeader'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport { Button } from 'components/Button'\nimport Time from 'components/Time'\nimport { toLocaleDate } from 'utilities/toLocaleDate'\nimport Layout from 'components/Layout'\nimport useRouteConfig from 'utilities/useRouteConfig'\nimport TagsDialog from 'components/TagsDialog'\nimport { PlantTag, PlantType } from 'typings/plant'\nimport TagList from 'components/TagList'\nimport useUserProfile from 'utilities/useUserProfile'\nimport logger from 'utilities/logger'\n\nconst PlantGlobalStyle = createGlobalStyle`\n  #plant-dialog-settings .dialog-content > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst PlantHeader = styled.header<{ $loading: boolean }>`\n  width: calc(100% + ${({ theme }) => theme.spacings.l});\n  height: 100vw;\n  background: ${({ theme }) => theme.colors.white};\n  margin-top: -${(props) => props.theme.frameWidgetHeight};\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  position: relative;\n  mask: url(../assets/img/plant-header-mask.svg);\n  mask-size: cover;\n\n  @media screen and (min-width: 650px) {\n    height: auto;\n    aspect-ratio: 1/1;\n  }\n\n  ${({ $loading }) =>\n    $loading &&\n    css`\n      justify-content: center;\n      align-items: center;\n\n      &::before {\n        content: '';\n        width: 60%;\n        height: 20px;\n        display: block;\n        background: ${({ theme }) => theme.colors.beige};\n        border-radius: ${({ theme }) => theme.baseRadius};\n        position: absolute;\n        bottom: ${({ theme }) => theme.spacings.m};\n        left: ${({ theme }) => theme.spacings.m};\n      }\n    `}\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n\nconst PlantHeaderLabel = styled.div<{ gradient: boolean }>`\n  width: 100%;\n  padding: ${({ theme }) => theme.spacings.l};\n  position: relative;\n  z-index: 1;\n\n  ${({ gradient }) =>\n    gradient &&\n    css`\n      background-image: var(--top-notch-gradient);\n    `}\n`\n\nconst PlantHeaderBackground = styled.div`\n  position: absolute;\n  z-index: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PlantSection = styled.section`\n  width: 100%;\n  margin-bottom: ${({ theme }) => theme.spacings.m};\n\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: ${({ theme }) => theme.spacings.m};\n  }\n`\n\nconst TagsDescription = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacings.s};\n  color: ${({ theme }) => theme.colors.beigeDark};\n`\n\nconst CategoryAction = styled.button`\n  background: transparent;\n  border: none;\n  position: relative;\n  z-index: 0;\n  padding: calc(0.5 * ${({ theme }) => theme.spacings.m}) ${({ theme }) => theme.spacings.m};\n\n  &:focus,\n  &:hover {\n    outline: none;\n\n    & svg path {\n      fill: ${({ theme }) => theme.colors.yellow};\n    }\n  }\n\n  p {\n    position: relative;\n    z-index: 1;\n  }\n\n  > svg {\n    height: 85%;\n    width: 100%;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n\n    & path {\n      fill: ${({ theme }) => theme.colors.green};\n    }\n  }\n`\n\nexport default function Plant() {\n  const routeConfig = useRouteConfig('plantBase')\n  const profile = useUserProfile()\n  const navigate = useNavigate()\n  const params = useParams<{ id: string }>()\n  const [tags, loadingTags] = usePlantTags()\n  const [data, loading, error] = usePlantDocument(params.id ?? '')\n  const [downloadedImageUrl, loadingImageUrl] = useDownloadURL(getFileRef(data?.imageURL))\n  const [typeDialog, setTypeDialog] = useState<A11yDialogInstance>()\n  const [tagsDialog, setTagsDialog] = useState<A11yDialogInstance>()\n  const [modulesDialog, setModulesDialog] = useState<A11yDialogInstance>()\n  const [settingsDialog, setSettingsDialog] = useState<A11yDialogInstance>()\n  const [selectedTags, setSelectedTags] = useState<PlantTag[]>([])\n  const [isLoadingSelectedTags, setIsLoadingSelectedTags] = useState(false)\n  const [confirmDelete, setConfirmDelete] = useState(false)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const hasImageUrl = typeof data?.imageURL === 'string'\n\n  async function onSetPlantType(type?: PlantType) {\n    try {\n      await updatePlantType(profile.id, {\n        id: data?.id,\n        type: type,\n      })\n    } catch (error) {\n      logger(error as string, true)\n      toast.error('Failed to update plant type, please try again.')\n    }\n  }\n\n  async function onDeletePlant() {\n    if (!data) return\n    if (confirmDelete === false) {\n      setConfirmDelete(true)\n      return\n    }\n\n    setIsDeleting(true)\n    try {\n      await deletePlant(profile.id, data.id)\n      if (hasImageUrl) {\n        const hasLegacyName = data?.imageURL?.includes('cover.png')\n        await deletePhoto(profile.id, data?.id, hasLegacyName ? 'cover.png' : 'cover')\n      }\n    } catch (error) {\n      logger(error as string, true)\n      toast.error('Unable to delete plant, please try again.')\n    } finally {\n      setIsDeleting(false)\n      setConfirmDelete(false)\n      navigate(routePaths.home)\n    }\n  }\n\n  function handleSettingsDialogClose() {\n    setConfirmDelete(false)\n  }\n\n  useEffect(() => {\n    async function updateTags() {\n      try {\n        await updatePlant(profile.id, {\n          id: data?.id,\n          tags: selectedTags?.map((tag) => getTagRef(profile.id, tag.id)),\n        })\n      } catch (error) {\n        logger(error as string, true)\n        toast.error('Failed to update tags, please try again.')\n      }\n    }\n    updateTags()\n  }, [selectedTags, profile.id, data?.id])\n\n  useEffect(() => {\n    async function get() {\n      if (!data?.tags?.length) {\n        return\n      }\n      setIsLoadingSelectedTags(true)\n      const tags = await getTagDocs(data?.tags)\n      if (tags?.length) {\n        setSelectedTags(tags)\n      }\n      setIsLoadingSelectedTags(false)\n    }\n    get()\n  }, [data?.tags])\n\n  useEffect(() => {\n    if (error !== undefined) {\n      toast.error(error?.message || 'Failed to load your data. Please reload.')\n    }\n  }, [error])\n\n  useEffect(() => {\n    settingsDialog?.on('hide', handleSettingsDialogClose)\n    return () => {\n      settingsDialog?.off('hide', handleSettingsDialogClose)\n    }\n  }, [settingsDialog])\n\n  return (\n    <React.Fragment>\n      {/* Globals */}\n      <PlantGlobalStyle />\n      <DocumentTitle title={data?.name} />\n      <Layout {...routeConfig}>\n        {/* Dialogs */}\n        <Dialog title=\"Plant settings\" reference={setSettingsDialog} id=\"plant-dialog-settings\">\n          <Button variant=\"alarm\" mb=\"l\" mt=\"s\" onClick={onDeletePlant}>\n            {isDeleting ? <Spinner /> : <Trash2 />}\n            {confirmDelete ? 'Are you sure? This is permanent' : 'Delete plant'}\n          </Button>\n          {data?.modified && (\n            <Text color=\"beigeDark\" size=\"s\" center>\n              Last modified {toLocaleDate(data?.modified)} (\n              <Time dateTime={data?.modified}>{data?.modified}</Time>)\n            </Text>\n          )}\n        </Dialog>\n\n        <Dialog title=\"Select a category\" reference={setTypeDialog} id=\"plant-dialog-category\">\n          {!loading && <TypesList selected={data?.type} onSelectType={onSetPlantType} />}\n        </Dialog>\n\n        <TagsDialog\n          id=\"plant-dialog-tags\"\n          reference={setTagsDialog}\n          tags={tags}\n          loading={loadingTags}\n          selected={selectedTags}\n          onSelect={setSelectedTags}\n        />\n\n        <Dialog title=\"Select modules\" reference={setModulesDialog} id=\"plant-dialog-modules\">\n          <Text color=\"beigeDark\">There are no modules.</Text>\n        </Dialog>\n\n        {/* Page content */}\n        <AppHeaderPortal.Source>\n          <AppHeaderButton onClick={() => settingsDialog?.show()}>\n            <MoreVertical color={theme.colors.greenDark} aria-hidden=\"true\" focusable=\"false\" />\n            <VisuallyHidden>Settings</VisuallyHidden>\n          </AppHeaderButton>\n        </AppHeaderPortal.Source>\n\n        <PlantHeader $loading={loading}>\n          {!loading && (\n            <PlantHeaderLabel gradient={hasImageUrl && !loadingImageUrl}>\n              <Heading\n                semiBold\n                color={hasImageUrl && !loadingImageUrl ? 'white' : 'greenDark'}\n                as=\"h2\"\n              >\n                {data?.name}\n              </Heading>\n            </PlantHeaderLabel>\n          )}\n\n          <PlantHeaderBackground>\n            {loading && <Spinner />}\n            {!loading && data && hasImageUrl && !loadingImageUrl ? (\n              <img loading=\"lazy\" src={downloadedImageUrl} alt={data.name} title={data.name} />\n            ) : (\n              <CameraOff color={theme.colors.beige} size={80} />\n            )}\n          </PlantHeaderBackground>\n        </PlantHeader>\n\n        <PlantSection>\n          <header>\n            <Text bold color=\"beigeDark\" mt=\"m\">\n              Type\n            </Text>\n            <CategoryAction onClick={() => typeDialog?.show()}>\n              <Text color=\"white\">{loading ? <Spinner /> : data?.type?.label ?? 'No type'}</Text>\n              <BaseSVG viewBox=\"0 0 165 30\" preserveAspectRatio=\"none\" role=\"presentation\">\n                <path\n                  fillRule=\"evenodd\"\n                  fill={theme.colors.green}\n                  d=\"M15.2980242 1.6865913C54.3474655-.0040447 142.277064-1.0595373 158.333369 1.687221c3.375937.5775946 5.502516 1.7986084 5.918387 3.8707842 1.21636 6.106668 1.016982 12.190389-1.095662 18.3021319-1.949603 5.6402323-10.579788 5.712085-23.246595 5.8007791C1.8856749 30.6329676 1.9064585 29.5996066.7651242 25.4596764c-.4861923-1.7819255-.903879-3.6105191-.7214437-5.4103613C1.9143985 2.0020504 4.40911 2.1588096 15.2980242 1.6865913\"\n                />\n              </BaseSVG>\n            </CategoryAction>\n          </header>\n        </PlantSection>\n\n        <PlantSection>\n          <header>\n            <Text bold color=\"beigeDark\">\n              Tags\n            </Text>\n            <Button round size=\"s\" variant=\"info\" onClick={() => tagsDialog?.show()}>\n              <Plus color={theme.colors.white} aria-hidden=\"true\" focusable=\"false\" />\n              <VisuallyHidden>Open tags dialog</VisuallyHidden>\n            </Button>\n          </header>\n          {selectedTags?.length ? (\n            <TagList tags={selectedTags} />\n          ) : (\n            <TagsDescription>\n              {isLoadingSelectedTags ? <Spinner /> : null}\n              <Text color=\"beigeDark\">Add tags for better organisation</Text>\n            </TagsDescription>\n          )}\n        </PlantSection>\n\n        <PlantSection>\n          <header>\n            <Text bold color=\"beigeDark\">\n              Modules\n            </Text>\n            <Button round size=\"s\" variant=\"info\" onClick={() => modulesDialog?.show()}>\n              <Plus color={theme.colors.white} aria-hidden=\"true\" focusable=\"false\" />\n              <VisuallyHidden>Open modules dialog</VisuallyHidden>\n            </Button>\n          </header>\n          <Text color=\"beigeDark\">Add modules for interactive care taking</Text>\n        </PlantSection>\n      </Layout>\n    </React.Fragment>\n  )\n}\n","export const toLocaleDate = (dateString: string | number | Date): string =>\n  new Date(dateString).toLocaleDateString(navigator && navigator.language)\n","import React from 'react'\nimport Layout from 'components/Layout'\nimport useRouteConfig from 'utilities/useRouteConfig'\n\nexport default function PlantGallery() {\n  const routeConfig = useRouteConfig('plantGallery')\n  return (\n    <Layout {...routeConfig}>\n      <h1>Gallery</h1>\n    </Layout>\n  )\n}\n","import React, { useState } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { List, Plus } from 'react-feather'\nimport A11yDialogInstance from 'a11y-dialog'\nimport { theme } from 'theme'\nimport { generatePath, useNavigate } from 'react-router-dom'\nimport { routePaths } from 'routes'\nimport { getDownloadURL } from 'firebase/storage'\nimport Layout, { BaseLayout } from 'components/Layout'\nimport NewIllustration from 'components/NewIllustration'\nimport { Button } from 'components/Button'\nimport { Text } from 'components/Typography'\nimport { Input } from 'components/Input'\nimport Spinner from 'components/Spinner'\nimport VisuallyHidden from 'components/VisuallyHidden'\nimport Dialog from 'components/Dialog'\nimport TypesList from 'components/TypesList'\nimport TagsDialog from 'components/TagsDialog'\nimport TagList from 'components/TagList'\nimport { toast } from 'components/Toaster'\nimport { addPlant, getTagRef, updatePlant, uploadPhoto, usePlantTags } from 'services/firebase'\nimport { PlantType, PlantTag } from 'typings/plant'\nimport useRouteConfig from 'utilities/useRouteConfig'\nimport logger from 'utilities/logger'\nimport useUserProfile from 'utilities/useUserProfile'\n\nconst NewGlobalStyle = createGlobalStyle`\n  #root ${BaseLayout} {\n    background-color: ${({ theme }) => theme.colors.green};\n  }\n`\n\nconst Illustration = styled(NewIllustration)`\n  width: 100%;\n  position: absolute;\n  z-index: 0;\n  bottom: 0;\n`\n\nconst NewForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n\n  label {\n    text-align: left;\n    position: relative;\n    margin-bottom: ${({ theme }) => theme.spacings.l};\n  }\n`\n\nconst NewPlantButton = styled((p) => <Button {...p} />)`\n  box-shadow: 0 1px 2px ${({ theme }) => theme.colors.greenDark};\n  margin-top: auto;\n  margin-bottom: ${({ theme }) => theme.spacings.m};\n`\n\nconst TypeButton = styled.button`\n  width: 100%;\n  border: none;\n  border-radius: ${({ theme }) => theme.baseRadius};\n  background-color: ${({ theme }) => theme.colors.white};\n  display: flex;\n  align-items: stretch;\n  overflow: hidden;\n\n  & div:first-of-type {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: calc(${({ theme }) => theme.spacings.m} * 2);\n    border: 2px solid ${({ theme }) => theme.colors.white};\n    border-top-left-radius: ${({ theme }) => theme.baseRadius};\n    border-bottom-left-radius: ${({ theme }) => theme.baseRadius};\n    border-right: none;\n    background: ${({ theme }) => theme.colors.white};\n  }\n\n  & div:first-of-type + div {\n    background: ${({ theme }) => theme.colors.yellow};\n    border: 2px solid ${({ theme }) => theme.colors.yellow};\n    border-top-right-radius: ${({ theme }) => theme.baseRadius};\n    border-bottom-right-radius: ${({ theme }) => theme.baseRadius};\n    border-left: none;\n    padding: 0 calc(${({ theme }) => theme.spacings.m} * 2);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst TagContainer = styled.div<{ hasContent: boolean }>`\n  display: flex;\n  align-items: ${({ hasContent }) => (hasContent ? 'start' : 'center')};\n  gap: ${({ theme }) => theme.spacings.m};\n`\n\nexport default function PlantNew() {\n  const routeConfig = useRouteConfig('plantNew')\n  const profile = useUserProfile()\n  const [tags, loadingTags] = usePlantTags()\n  const navigate = useNavigate()\n  const [tagsDialog, setTagsDialog] = useState<A11yDialogInstance>()\n  const [categoriesDialog, setCategoriesDialog] = useState<A11yDialogInstance>()\n  const [name, setName] = useState({ value: '', error: '' })\n  const [photo, setPhoto] = useState<File>()\n  const [type, setType] = useState<PlantType>()\n  const [selectedTags, setSelectedTags] = useState<PlantTag[]>([])\n  const [isProgress, setIsProgress] = useState(false)\n\n  function onSelecttype(type?: PlantType) {\n    setType(type)\n  }\n\n  function onFileInput(data: { file?: File; fileName: string }) {\n    if (data.file) {\n      setPhoto(data.file)\n    }\n  }\n\n  async function formAction(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    setIsProgress(true)\n\n    try {\n      const ref = await addPlant(profile.id, {\n        name: name.value.trim(),\n        type: type,\n        tags: selectedTags?.map((tag) => getTagRef(profile.id, tag.id)),\n      })\n\n      if (photo) {\n        const upload = await uploadPhoto(profile.id, ref.id, photo)\n        if (upload) {\n          const url = await getDownloadURL(upload.ref)\n          await updatePlant(profile.id, {\n            id: ref.id,\n            imageURL: url,\n          })\n        }\n      }\n\n      navigate(generatePath(routePaths.plant.base, { id: ref.id }))\n    } catch (error) {\n      logger(error as string, true)\n      toast.error('An error oc  cured adding your new plant, please try again')\n    } finally {\n      setIsProgress(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {/* Globals */}\n      <NewGlobalStyle />\n      <Layout {...routeConfig}>\n        {/* Dialogs */}\n        <TagsDialog\n          id=\"newplant-tags\"\n          reference={setTagsDialog}\n          tags={tags}\n          loading={loadingTags}\n          selected={selectedTags}\n          onSelect={setSelectedTags}\n        />\n\n        <Dialog id=\"newplant-categories\" title=\"Select a type\" reference={setCategoriesDialog}>\n          <TypesList onSelectType={onSelecttype} />\n        </Dialog>\n\n        {/* Page content */}\n        <NewForm>\n          <label htmlFor=\"name\">\n            <Text color=\"white\" mb=\"m\" as=\"span\">\n              What&apos;s your friends name?\n              <span title=\"Required\">\n                {'*'}\n                <VisuallyHidden>(required)</VisuallyHidden>\n              </span>\n            </Text>\n            <Input\n              required\n              fullWidth\n              type=\"name\"\n              value={name.value}\n              placeholder=\"Echeveria pulvinata\"\n              id=\"name\"\n              error={name.error}\n              disabled={isProgress}\n              data-cy=\"new-form-name\"\n              onChange={(event) => {\n                setName((d) => ({ ...d, value: event.target.value }))\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"photo\">\n            <Text color=\"white\" mb=\"m\" as=\"span\">\n              Do you want to upload a photo?\n            </Text>\n            <Input\n              fullWidth\n              type=\"file\"\n              id=\"photo\"\n              data-cy=\"new-form-photo\"\n              disabled={isProgress}\n              fileBackgroundColor=\"greenDark\"\n              onFileInput={onFileInput}\n            />\n          </label>\n\n          <label htmlFor=\"type\">\n            <Text color=\"white\" mb=\"m\" as=\"span\">\n              Type\n            </Text>\n            <TypeButton type=\"button\" onClick={() => !isProgress && categoriesDialog?.show()}>\n              <div>\n                <Text\n                  color={type !== undefined ? 'black' : 'beigeDark'}\n                  as=\"span\"\n                  variant=\"special\"\n                >\n                  {type !== undefined ? type.label : 'e.g. Succulent, Herb, …'}\n                </Text>\n              </div>\n              <div>\n                <List />\n              </div>\n            </TypeButton>\n          </label>\n\n          <label htmlFor=\"tags\">\n            <Text color=\"white\" mb=\"m\" as=\"span\">\n              Tags\n            </Text>\n            <TagContainer hasContent={selectedTags?.length > 0}>\n              <Button\n                round\n                size=\"s\"\n                variant=\"warning\"\n                type=\"button\"\n                onClick={() => !isProgress && tagsDialog?.show()}\n              >\n                <Plus color={theme.colors.greenDark} />\n                <VisuallyHidden>Open tags dialog</VisuallyHidden>\n              </Button>\n              {selectedTags?.length ? (\n                <TagList tags={selectedTags} />\n              ) : (\n                <Text color=\"white\">Add tags for more granular organisation</Text>\n              )}\n            </TagContainer>\n          </label>\n\n          <NewPlantButton type=\"submit\" variant=\"warning\" onClick={formAction}>\n            {isProgress && <Spinner />}\n            Add friend\n          </NewPlantButton>\n        </NewForm>\n\n        {/* Background */}\n        <Illustration />\n      </Layout>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { theme } from 'theme'\nimport BaseSVG from './BaseSVG'\n\nexport default function NewIllustration(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <BaseSVG viewBox=\"0 0 360 137\" {...props}>\n      <defs>\n        <path id=\"a\" d=\"M0 0h360v137H0z\" />\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <mask id=\"b\" fill={theme.colors.white}>\n          <use xlinkHref=\"#a\" />\n        </mask>\n        <g mask=\"url(#b)\">\n          <path\n            fill={theme.colors.greenDark}\n            d=\"M185.92588 148.431508c-11.422503.664601-29.673676 1.467919-40.516777-2.217407-2.710775-.91305-4.986999-2.728798-6.642434-5.238132-2.441767-3.672904-2.193452-5.985549-.227622-9.122218 6.414811-10.149139 15.436933-12.223688 26.714586-12.4887 12.519229-.298139 17.506227-10.09945 20.837791-15.049796 3.290177-4.8861625 7.759853-7.654298 13.181403-8.7412622 15.105847-3.0455701 17.609692 2.7039528 34.702061 4.8944442 14.174665 1.815748 16.88544-11.1843435 22.058675-20.0249855 21.024027-35.921578 50.946019 7.6874247 75.260225-22.954613 3.66265-4.6149393 9.498059-14.0083802 12.684772-17.9628594 5.131849-6.3706453 16.968211-10.459701 24.955686 6.4679544 5.83541 12.3541243 8.691035 29.5882001 9.042815 43.909212.227623 8.7164175-1.241576 17.1554005-4.283438 25.2362025-13.077939 34.933993-61.789121 25.936001-187.767743 33.29216M158.342208 54.0339283c.39-4.006.24-11.898 4.28-20.55 4.26-9.135 17.97-17.255 26.95-11.628 12.12 7.586 6.11 28.432 15.93 32.242 3.34 1.298 6.07 1.942 7.61 6.379 1.2 3.452 1.21 6.855-.13 10.23-3.05 7.637-8.55 13.771-16.03 15.061-3.26.563-7.36.712-11.54 1.659-11.89 2.693-10.54 17.2189997-23.92 18.5829997-2.9.294-6.44.548-9.11-1.585-8.9-7.0999997-9.22-18.0879997-3.8-28.3749997 3.82-7.243 8.77-11.98 9.76-22.016zM81.806667 100.240671c10.975089-18.7712506 19.668118-33.5590144 38.416196-44.9645305 3.723006-2.2653404 11.44864-6.1002059 15.370086-4.6410204 1.244761.4638768 1.822041 1.8487519 1.073381 2.9611557-.593066.8759616-1.274076 1.715894-2.031756 2.454494-19.740278 19.2779118-14.256116 44.4511132-44.076249 67.6607192-11.216374 8.728091-14.727411 10.052166-21.253383 14.240569-6.728923 4.319009-6.645488 7.012197-8.136044 8.45562-1.301135 1.261024-2.543641.274723-4.020667-.788141-3.389266-2.438731-7.254338-3.265152-11.2772593-2.776505-5.8359424.707074-11.5884498.153124-17.3093872-.736349-40.1886268-6.244323-49.4070706-37.224992-76.1716768-50.2000331-.8163104-.396322-1.5830107-.9074873-2.342946-1.4118971-1.6190907-1.0786263-1.5785007-3.4475509 1.6822307-3.8956649 38.1501059-5.2445108 50.311326 6.6856816 63.9450617 18.4109571 1.6551707 1.864515 1.6551707 1.864515 3.0983713 1.911804-.6178703-1.121412-.8726854-2.317133-1.9641058-3.033215C4.5390595 80.3187356 4.0001142 62.1419684-13.4783981 50.2072725c-4.1582217-2.8373051-8.3480135-5.6025517-13.3225455-6.8973536-2.7465912-.7138299-2.6811962-3.1322947.2255001-3.5015947 2.417361-.3062488 4.827957-.8129105 7.249828-.884969 14.292196-.4255958 18.1550126.0495402 21.8081141 1.2340025 11.7643399 3.8100954 20.6535536 9.5747788 27.8447516 19.6922484C53.249335 92.102559 53.90103 107.550109 56.767136 115.332431c0-36.0292705-8.0683931-94.281846 32.582509-114.8748261 2.936011-1.4884593 4.859527.9998122 4.363427 2.533308-2.225686 6.8838426-9.809254 19.9579643-11.08784 41.1949677-.602085 10.0611739-.096965 20.0863185.6765 30.1092113.626891 8.1358597-1.071125 17.1679476-2.536876 24.9007298-1.057595 1.4681933-1.237995 3.1750793-1.783705 5.6926253 1.616835-1.839745 2.494031-3.075999 2.825516-4.647776\"\n          />\n          <path\n            fill={theme.colors.green}\n            d=\"M92 3.8344465c-2.258934 3.0262879-4.42036 4.9382188-7.178441 11.0132615-7.387387 16.2705099-10.398525 28.7283913-10.419419 48.2206509-.039468 32.9678904 1.058657 51.0312571-14.134008 74.0058821-1.156165 1.750169-3.097037.844754-1.882831-1.262639 8.450687-14.641661 14.192047-21.846788 13.753261-66.8119885-.227518-23.3116281 1.457976-36.7445718 12.527448-58.6610071 1.309393-2.5994173 3.057571-4.9606857 5.290967-6.9332772.67559-.5976188 1.369754-.5976188 2.043023.4291173M52 134.583169c-.714796.261064-1.319796.924975-2.379667-.29032-25.7550756-29.585694-22.6337235-61.2621457-51.2210958-83.3625193-7.0628152-5.4598275-10.7062599-5.7974096-13.2338156-6.8214085-1.7164075-.6954191-1.5416298-2.5566217.5557037-2.0097387 12.7879083 3.3375615 24.7288164 15.1574354 31.1283724 25.8947962 3.5090002 5.8829304 6.511593 12.0066693 9.1780747 18.3172037C40.9038511 121.561503 41.2623697 120.238182 51.621315 133.259848c.242.303824.237518.805696.378685 1.323321M76.630422 125c-.801816-1.497089-1.852937-1.110453 3.99336-5.523045 20.532787-15.499143 19.661345-34.8556505 39.452957-57.3906627 1.671013-1.9039556 6.580734-7.4045216 9.165862-7.0718352.265026.0337182.696255.227036.723207.4001229.065133.3843878.049411 1.0744874-.154973 1.1688984-3.705874 1.7353645-6.225868 4.7789961-8.772814 7.8091404-21.601876 25.6977814-15.519751 39.2322762-42.747817 59.8363582-.451442.33943-1.044382.492286-1.659782.771023M-36.4572512 92c12.4095735 1.9384985 20.2083953 8.491932 41.3163945 23.898369 15.4443275 11.272176 25.7300242 13.549179 29.8582817 15.618565.1871356.094781.3156505.53935.2750668.787586-.0450929.245979-.3291783.631873-.5253326.643157-.7372693.042877-1.5466874.133145-2.2140627-.110578-26.4785668-9.618021-33.4657159-20.42532-52.8669478-32.250386-10.2293305-6.2329832-12.6215103-5.3393332-17.162368-7.1266333-.1104777-.0451338-.2525204-.2843432-.2187007-.3768675.3179051-.9094469.3787806-.7514785 1.5376688-1.0832122\"\n          />\n          <path\n            fill={theme.colors.greenDark}\n            d=\"M129.593019 117.181507c.093 3.685-1.334 6.48-4.166 8.449-7.948 5.526-14.643-1.645-13.24-7.231 1.839-7.324 6.636-15.157 12.211-11.448 3.529 2.35 5.099 5.84 5.195 10.23M163.996165 15.652422c-.151833 3.3971403-.70489 5.8215025-4.020295 11.1815312-1.691443 2.7349002-3.948412 4.8212816-6.671885 6.3161966-4.083376 2.2409282-9.510517-.1011053-8.065529-5.2473684 1.780197-6.3385842 7.923964-4.5627407 9.828855-10.9193795 1.239609-4.1315985 1.194133-6.0186579 2.661126-7.2413107 2.718338-2.2669267 6.407093.9316138 6.267728 5.9103308M230.408924 91.9389601c-1.97935-.2816154-3.316801-1.9044499-3.403623-4.1442045-.117063-3.0076127 1.723761-7.0545688 3.629946-9.2831804 1.99008-2.3268731 4.913742-1.923697 6.394596.9086658 2.768553 5.2868745-.68287 13.3615395-6.620919 12.5187191\"\n          />\n          <path\n            fill={theme.colors.green}\n            d=\"M272.909513 75.802815c1.979658-1.68595 4.220922-2.709143 5.924477-.678669 2.406926 2.870336.844184 7.492344-2.466289 9.560176-3.623849 2.263615-5.769168 5.705389-8.686885 10.4429304-5.461314 8.8669784-1.616582 13.2226386-.884219 19.0442524.256085 2.0401591-.956006 3.2141673-2.781736 2.713294-3.559656-.9761494-5.822318-6.2242494-5.995573-10.5473944-.444526-11.0621039 6.862536-23.6980844 14.890225-30.5345894M283.068999 106.997489c-1.11272-.039405-1.95798-.613598-2.533226-1.638138-1.158148-2.064434-.224586-4.757818.781457-6.9164155.698768-1.4989404 2.527101-2.8883646 4.037441-2.3080305 4.675979 1.7972956 2.676654 11.039653-2.285672 10.862584\"\n          />\n          <path\n            fill={theme.colors.red}\n            d=\"M238.031272 43.9956479c1.28-.059 1.8-1.064 4.38-2.816 3.03-2.063 5.44-.962 5.5 1.441.02.851-.08 1.773-.38 2.553-1.61 4.297-3.9 8.124-6.98 11.355-1.79 1.872-5.04 3.422-6.84.776-1.04-1.528-3.51-6.764-4.61-14.561-.53-3.736.96-9.095 5.9-2.939 1.1 1.378 1.1 1.796 3.03 4.191\"\n          />\n          <path\n            fill={theme.colors.greenDark}\n            d=\"M320.63566 32.4861788c1.027949-3.4628352 3.88123-8.3925941 7.052227-10.2888118.332128-.1980313.70337-.2285498 1.079416-.1722601 1.464382.218377 1.519965 2.0237173.711604 2.821268-1.920714 1.8955395-5.598138 3.9450279-7.011054 8.5241629.44947.7283755 2.038743 1.8012711 2.222649 5.1745853.216844 4.0053868-.958642 7.6018253-3.225209 10.8924004-1.453402 2.1091691-3.411172 3.6059332-5.699012 4.7235893-4.6443 2.2685437-9.849924 2.0555922-15.161225 1.3767246-.496819-.0637498-.982659-.2373663-1.463009-.3933499-.079601-.0257712-.12695-.2217679-.14136-.343842-.008235-.0718881.059014-.1892149.126263-.2251589.848161-.4496396 1.724457-.3458766 3.203936-1.8562045 6.412675-6.5472407 5.046422-13.3786428 11.69241-18.4609943 2.879357-2.2020811 5.126709-1.8501008 6.612364-1.772109\"\n          />\n        </g>\n      </g>\n    </BaseSVG>\n  )\n}\n"],"names":["Actions","styled","theme","spacings","m","l","TagsDialog","props","id","tags","loading","onSelect","noop","selected","reference","profile","useUserProfile","useState","selectedTags","setSelectedTags","value","error","inputTagName","setInputTagName","isUploading","setIsUploading","trim","d","name","partialData","label","toSlug","addPlantTag","toast","logger","useEffect","title","length","tag","some","t","filter","color","I","fullWidth","type","placeholder","disabled","onChange","event","target","round","onClick","List","TypesList","onSelectType","selectedType","setSelectedType","isSelected","useCallback","htmlFor","checked","undefined","typesData","dayjs","isSameOrBefore","isSameOrAfter","isToday","LocalisedDate","dateTime","Date","toISOString","time","children","format","React","PlantGlobalStyle","createGlobalStyle","PlantHeader","colors","white","frameWidgetHeight","$loading","css","beige","baseRadius","PlantHeaderLabel","gradient","PlantHeaderBackground","PlantSection","TagsDescription","s","beigeDark","CategoryAction","yellow","green","Plant","dateString","routeConfig","useRouteConfig","navigate","useNavigate","params","useParams","usePlantTags","loadingTags","usePlantDocument","data","useDownloadURL","getFileRef","imageURL","downloadedImageUrl","loadingImageUrl","typeDialog","setTypeDialog","tagsDialog","setTagsDialog","modulesDialog","setModulesDialog","settingsDialog","setSettingsDialog","isLoadingSelectedTags","setIsLoadingSelectedTags","confirmDelete","setConfirmDelete","isDeleting","setIsDeleting","hasImageUrl","updatePlantType","deletePlant","hasLegacyName","includes","deletePhoto","routePaths","handleSettingsDialogClose","updatePlant","map","getTagRef","updateTags","getTagDocs","get","message","on","off","DocumentTitle","Layout","Dialog","Button","variant","mb","mt","Spinner","modified","size","center","toLocaleDateString","navigator","language","Time","AppHeader","show","focusable","VisuallyHidden","semiBold","as","src","alt","bold","BaseSVG","viewBox","preserveAspectRatio","role","fillRule","fill","TagList","PlantGallery","NewGlobalStyle","BaseLayout","Illustration","xlinkHref","mask","NewForm","NewPlantButton","p","greenDark","TypeButton","TagContainer","hasContent","PlantNew","categoriesDialog","setCategoriesDialog","setName","photo","setPhoto","setType","isProgress","setIsProgress","preventDefault","addPlant","ref","uploadPhoto","upload","getDownloadURL","url","generatePath","Input","required","fileBackgroundColor","onFileInput","file"],"sourceRoot":""}